Best performing model = LogisticRegression(penalty='l1', solver='liblinear') 

Accuracy score on the test set = 0.84 

Model parameters = {'C': 1.0, 'penalty': 'l1', 'solver': 'liblinear'} 

    mean_fit_time  std_fit_time  mean_score_time  std_score_time param_C  \
14       0.849528      0.089782         0.037698        0.013666       1   
15       4.335205      0.444654         0.028724        0.004250       1   
17       0.964021      0.128148         0.022741        0.002130       1   
16       0.720672      0.004398         0.030718        0.003478       1   
4        0.740510      0.011101         0.033997        0.006176     100   
10       0.749831      0.099281         0.031956        0.004182      10   
9       15.714445      2.994724         0.030540        0.004120      10   
11       2.191936      0.086333         0.031317        0.008239      10   
22       0.701721      0.018568         0.031516        0.008406     0.1   
23       0.609170      0.046229         0.034906        0.011267     0.1   
21       2.381829      0.188556         0.027128        0.002778     0.1   
8       10.075985      1.248360         0.037504        0.006865      10   
5        5.306165      0.711234         0.039602        0.006454     100   
3       41.672302      3.231411         0.034588        0.006240     100   
2       30.276565      7.247068         0.030997        0.003510     100   
20       0.211035      0.018601         0.024135        0.002130     0.1   
27       1.373525      0.293839         0.028325        0.001353    0.01   
29       0.325328      0.062288         0.027727        0.008137    0.01   
28       0.635100      0.031466         0.025733        0.003960    0.01   
26       0.214026      0.018813         0.036303        0.007152    0.01   
0        0.022392      0.001358         0.000000        0.000000     100   
1        0.023787      0.001168         0.000000        0.000000     100   
6        0.047592      0.009291         0.000000        0.000000      10   
7        0.033982      0.003705         0.000000        0.000000      10   
12       0.041889      0.010615         0.000000        0.000000       1   
13       0.044481      0.012905         0.000000        0.000000       1   
18       0.027127      0.002394         0.000000        0.000000     0.1   
19       0.032712      0.004250         0.000000        0.000000     0.1   
24       0.034108      0.004861         0.000000        0.000000    0.01   
25       0.035704      0.007964         0.000000        0.000000    0.01   

   param_penalty param_solver  \
14            l1    liblinear   
15            l2    newton-cg   
17            l2    liblinear   
16            l2        lbfgs   
4             l2        lbfgs   
10            l2        lbfgs   
9             l2    newton-cg   
11            l2    liblinear   
22            l2        lbfgs   
23            l2    liblinear   
21            l2    newton-cg   
8             l1    liblinear   
5             l2    liblinear   
3             l2    newton-cg   
2             l1    liblinear   
20            l1    liblinear   
27            l2    newton-cg   
29            l2    liblinear   
28            l2        lbfgs   
26            l1    liblinear   
0             l1    newton-cg   
1             l1        lbfgs   
6             l1    newton-cg   
7             l1        lbfgs   
12            l1    newton-cg   
13            l1        lbfgs   
18            l1    newton-cg   
19            l1        lbfgs   
24            l1    newton-cg   
25            l1        lbfgs   

                                               params  split0_test_score  \
14  {'C': 1.0, 'penalty': 'l1', 'solver': 'libline...           0.808889   
15  {'C': 1.0, 'penalty': 'l2', 'solver': 'newton-...           0.822222   
17  {'C': 1.0, 'penalty': 'l2', 'solver': 'libline...           0.822222   
16     {'C': 1.0, 'penalty': 'l2', 'solver': 'lbfgs'}           0.815556   
4      {'C': 100, 'penalty': 'l2', 'solver': 'lbfgs'}           0.813333   
10      {'C': 10, 'penalty': 'l2', 'solver': 'lbfgs'}           0.822222   
9   {'C': 10, 'penalty': 'l2', 'solver': 'newton-cg'}           0.822222   
11  {'C': 10, 'penalty': 'l2', 'solver': 'liblinear'}           0.822222   
22     {'C': 0.1, 'penalty': 'l2', 'solver': 'lbfgs'}           0.817778   
23  {'C': 0.1, 'penalty': 'l2', 'solver': 'libline...           0.822222   
21  {'C': 0.1, 'penalty': 'l2', 'solver': 'newton-...           0.820000   
8   {'C': 10, 'penalty': 'l1', 'solver': 'liblinear'}           0.822222   
5   {'C': 100, 'penalty': 'l2', 'solver': 'libline...           0.786667   
3   {'C': 100, 'penalty': 'l2', 'solver': 'newton-...           0.786667   
2   {'C': 100, 'penalty': 'l1', 'solver': 'libline...           0.782222   
20  {'C': 0.1, 'penalty': 'l1', 'solver': 'libline...           0.780000   
27  {'C': 0.01, 'penalty': 'l2', 'solver': 'newton...           0.777778   
29  {'C': 0.01, 'penalty': 'l2', 'solver': 'liblin...           0.777778   
28    {'C': 0.01, 'penalty': 'l2', 'solver': 'lbfgs'}           0.777778   
26  {'C': 0.01, 'penalty': 'l1', 'solver': 'liblin...           0.617778   
0   {'C': 100, 'penalty': 'l1', 'solver': 'newton-...                NaN   
1      {'C': 100, 'penalty': 'l1', 'solver': 'lbfgs'}                NaN   
6   {'C': 10, 'penalty': 'l1', 'solver': 'newton-cg'}                NaN   
7       {'C': 10, 'penalty': 'l1', 'solver': 'lbfgs'}                NaN   
12  {'C': 1.0, 'penalty': 'l1', 'solver': 'newton-...                NaN   
13     {'C': 1.0, 'penalty': 'l1', 'solver': 'lbfgs'}                NaN   
18  {'C': 0.1, 'penalty': 'l1', 'solver': 'newton-...                NaN   
19     {'C': 0.1, 'penalty': 'l1', 'solver': 'lbfgs'}                NaN   
24  {'C': 0.01, 'penalty': 'l1', 'solver': 'newton...                NaN   
25    {'C': 0.01, 'penalty': 'l1', 'solver': 'lbfgs'}                NaN   

    split1_test_score  split2_test_score  split3_test_score  \
14           0.804444           0.817778           0.817372   
15           0.802222           0.824444           0.795100   
17           0.804444           0.822222           0.792873   
16           0.795556           0.813333           0.790646   
4            0.797778           0.802222           0.790646   
10           0.784444           0.802222           0.792873   
9            0.793333           0.793333           0.797327   
11           0.791111           0.793333           0.797327   
22           0.780000           0.813333           0.801782   
23           0.777778           0.813333           0.799555   
21           0.777778           0.813333           0.797327   
8            0.780000           0.788889           0.804009   
5            0.777778           0.780000           0.786192   
3            0.775556           0.780000           0.783964   
2            0.768889           0.768889           0.781737   
20           0.731111           0.786667           0.797327   
27           0.724444           0.782222           0.788419   
29           0.724444           0.782222           0.788419   
28           0.722222           0.782222           0.788419   
26           0.617778           0.620000           0.619154   
0                 NaN                NaN                NaN   
1                 NaN                NaN                NaN   
6                 NaN                NaN                NaN   
7                 NaN                NaN                NaN   
12                NaN                NaN                NaN   
13                NaN                NaN                NaN   
18                NaN                NaN                NaN   
19                NaN                NaN                NaN   
24                NaN                NaN                NaN   
25                NaN                NaN                NaN   

    split4_test_score  mean_test_score  std_test_score  rank_test_score  
14           0.839644         0.817625        0.012124                1  
15           0.830735         0.814945        0.013771                2  
17           0.830735         0.814499        0.013796                3  
16           0.832962         0.809610        0.015177                4  
4            0.830735         0.806943        0.013991                5  
10           0.826281         0.805609        0.016278                6  
9            0.819599         0.805163        0.012967                7  
11           0.819599         0.804719        0.013396                8  
22           0.806236         0.803826        0.013136                9  
23           0.804009         0.803379        0.014997               10  
21           0.804009         0.802489        0.014587               11  
8            0.810690         0.801162        0.015106               12  
5            0.790646         0.784256        0.004700               13  
3            0.790646         0.783366        0.005227               14  
2            0.770601         0.774468        0.006167               15  
20           0.757238         0.770469        0.023659               16  
27           0.766147         0.767802        0.022870               17  
29           0.766147         0.767802        0.022870               17  
28           0.766147         0.767358        0.023714               19  
26           0.619154         0.618773        0.000869               20  
0                 NaN              NaN             NaN               30  
1                 NaN              NaN             NaN               29  
6                 NaN              NaN             NaN               26  
7                 NaN              NaN             NaN               25  
12                NaN              NaN             NaN               24  
13                NaN              NaN             NaN               23  
18                NaN              NaN             NaN               21  
19                NaN              NaN             NaN               22  
24                NaN              NaN             NaN               27  
25                NaN              NaN             NaN               28  
